import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";

export default function RocketDownload() {
  const [launch, setLaunch] = useState(false);
  const [downloading, setDownloading] = useState(false);

  const handleDownload = (type) => {
    setDownloading(true);
    
    const fileName = type === "py" ? "etl_pipeline.py" : "etl_pipeline.ipynb";
    const fileContent =
      type === "py"
        ? `# ETL Pipeline Generated by ReKnew Data Analyst Agent
# Generated on ${new Date().toLocaleDateString()}

import pyspark
from pyspark.sql import SparkSession
from pyspark.sql.functions import *

# Initialize Spark Session
spark = SparkSession.builder \\
    .appName("ETL_Pipeline") \\
    .config("spark.sql.adaptive.enabled", "true") \\
    .getOrCreate()

# Your generated ETL code here
print("ETL Pipeline Ready!")`
        : JSON.stringify({
            nbformat: 4,
            nbformat_minor: 2,
            metadata: {
              kernelspec: {
                display_name: "Python 3",
                language: "python",
                name: "python3"
              }
            },
            cells: [
              {
                cell_type: "markdown",
                metadata: {},
                source: ["# ETL Pipeline - Generated by ReKnew\\n", "## Data Analyst Agent"]
              },
              {
                cell_type: "code",
                execution_count: null,
                metadata: {},
                outputs: [],
                source: ["# Your generated ETL code here\\n", "print('ETL Pipeline Ready!')"]
              }
            ]
          }, null, 2);

    const blob = new Blob([fileContent], { 
      type: type === "py" ? "text/x-python" : "application/json" 
    });
    const link = document.createElement("a");
    link.href = URL.createObjectURL(blob);
    link.download = fileName;
    link.click();
    
    setTimeout(() => {
      setDownloading(false);
      setLaunch(false);
    }, 2000);
  };

  const handleLaunch = () => {
    setLaunch(true);
  };

  return (
    <div className="rocket-download-compact">
      <style>{`
        .rocket-download-compact {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          text-align: center;
          position: relative;
          padding: 0.5rem;
        }

        .launch-button {
          background: linear-gradient(135deg, #ff6b4a 0%, #ff8c6a 100%);
          color: white;
          padding: 0.5rem 1rem;
          border-radius: 6px;
          font-weight: 600;
          border: none;
          cursor: pointer;
          transition: all 0.3s;
          box-shadow: 0 4px 15px rgba(255, 107, 74, 0.3);
          display: flex;
          align-items: center;
          gap: 0.5rem;
          margin-top: 0.5rem;
          font-size: 0.9rem;
        }

        .launch-button:hover {
          transform: translateY(-2px);
          box-shadow: 0 6px 20px rgba(255, 107, 74, 0.4);
        }

        .rocket-mini {
          width: 30px;
          height: 40px;
          background: linear-gradient(to bottom, #e0e0e0, #9e9e9e);
          border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
          position: relative;
          margin: 0.5rem auto;
          box-shadow: 0 3px 10px rgba(0,0,0,0.3);
        }

        .rocket-mini::before {
          content: '';
          position: absolute;
          top: -10px;
          left: 50%;
          transform: translateX(-50%);
          width: 0;
          height: 0;
          border-left: 8px solid transparent;
          border-right: 8px solid transparent;
          border-bottom: 12px solid #e0e0e0;
        }

        .rocket-window-mini {
          width: 10px;
          height: 10px;
          background: radial-gradient(circle, #42a5f5, #1976d2);
          border-radius: 50%;
          position: absolute;
          top: 8px;
          left: 50%;
          transform: translateX(-50%);
        }

        .rocket-fin-mini {
          position: absolute;
          bottom: 2px;
          width: 0;
          height: 0;
          border-top: 6px solid transparent;
          border-bottom: 6px solid transparent;
        }

        .rocket-fin-mini.left {
          left: -6px;
          border-right: 6px solid #ff6b4a;
        }

        .rocket-fin-mini.right {
          right: -6px;
          border-left: 6px solid #ff6b4a;
        }

        .rocket-flame-mini {
          position: absolute;
          bottom: -8px;
          left: 50%;
          transform: translateX(-50%);
          width: 15px;
          height: 20px;
          background: linear-gradient(to top, #ff6b4a, #ffa500, transparent);
          border-radius: 50%;
          filter: blur(2px);
          animation: flicker-mini 0.2s infinite alternate;
        }

        @keyframes flicker-mini {
          0% { transform: translateX(-50%) scaleY(1); opacity: 0.9; }
          100% { transform: translateX(-50%) scaleY(1.2); opacity: 1; }
        }

        .download-options-zigzag {
          display: flex;
          flex-direction: column;
          gap: 0.3rem;
          margin-top: 0.5rem;
        }

        .download-btn-compact {
          padding: 0.3rem 0.6rem;
          border-radius: 5px;
          font-weight: 500;
          border: 1px solid rgba(255, 107, 74, 0.4);
          cursor: pointer;
          transition: all 0.3s;
          display: flex;
          align-items: center;
          gap: 0.3rem;
          font-size: 0.8rem;
          background: transparent;
          color: white;
        }

        .download-btn-compact.py {
          background: rgba(255, 183, 77, 0.2);
          color: #ffb74d;
          transform: translateX(-5px) rotate(-2deg);
        }

        .download-btn-compact.py:hover {
          background: rgba(255, 183, 77, 0.3);
          transform: translateX(-5px) rotate(-2deg) scale(1.05);
        }

        .download-btn-compact.ipynb {
          background: rgba(66, 165, 245, 0.2);
          color: #42a5f5;
          transform: translateX(5px) rotate(2deg);
        }

        .download-btn-compact.ipynb:hover {
          background: rgba(66, 165, 245, 0.3);
          transform: translateX(5px) rotate(2deg) scale(1.05);
        }

        .download-btn-compact:disabled {
          opacity: 0.5;
          cursor: not-allowed;
        }

        .ready-text {
          color: #ffffff;
          font-size: 0.85rem;
          font-weight: 600;
          margin-bottom: 0.2rem;
        }

        .ready-subtext {
          color: #a0a0a0;
          font-size: 0.75rem;
          margin-bottom: 0.3rem;
        }
      `}</style>

      {!launch ? (
        <motion.div
          initial={{ opacity: 0, y: 10 }}
          animate={{ opacity: 1, y: 0 }}
        >
          <div className="ready-text">Ready to Launch</div>
          <div className="ready-subtext">Code to Desktop</div>
          <button onClick={handleLaunch} className="launch-button">
            <span>ðŸš€</span>
            <span>Click Here</span>
          </button>
        </motion.div>
      ) : (
        <AnimatePresence>
          <motion.div
            initial={{ opacity: 0, scale: 0.8 }}
            animate={{ opacity: 1, scale: 1 }}
            exit={{ opacity: 0, scale: 0.8 }}
          >
            <motion.div
              initial={{ y: 20 }}
              animate={{ y: [-5, -80] }}
              transition={{ duration: 1.5, ease: "easeOut" }}
              className="rocket-mini"
            >
              <div className="rocket-window-mini"></div>
              <div className="rocket-fin-mini left"></div>
              <div className="rocket-fin-mini right"></div>
              <div className="rocket-flame-mini"></div>
            </motion.div>

            <div className="download-options-zigzag">
              <button
                onClick={() => handleDownload("py")}
                className="download-btn-compact py"
                disabled={downloading}
              >
                <span>ðŸ“„</span>
                <span>.py</span>
              </button>
              <button
                onClick={() => handleDownload("ipynb")}
                className="download-btn-compact ipynb"
                disabled={downloading}
              >
                <span>ðŸ““</span>
                <span>.ipynb</span>
              </button>
            </div>

            {downloading && (
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                style={{ marginTop: '0.3rem', color: '#4ade80', fontSize: '0.75rem' }}
              >
                âœ“ Downloading...
              </motion.div>
            )}
          </motion.div>
        </AnimatePresence>
      )}
    </div>
  );
}